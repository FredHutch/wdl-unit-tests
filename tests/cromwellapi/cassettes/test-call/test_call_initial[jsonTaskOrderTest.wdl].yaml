interactions:
- request:
    body: "--fff667ac35465e8f8e07c649cd1c7fcd\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"jsonTaskOrderTest.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow jsonTaskOrderTest {\n  input {\n    String input_json  # JSON
      string used as input for both tasks\n  }\n\n  call Task1 { input: input_json
      = input_json }\n  call Task2 { input: input_json = input_json, previous_output
      = Task1.output_file }\n\n  output {\n    File task1_output = Task1.output_file\n
      \   File task2_output = Task2.output_file\n  }\n}\n\ntask Task1 {\n  input {\n
      \   String input_json\n  }\n  \n  command <<<\n    echo \"Processing JSON in
      Task1: ~{input_json}\" > task1_output.txt\n    echo \"Task1 completed\" >> task1_output.txt\n
      \ >>>\n  \n  output {\n    File output_file = \"task1_output.txt\"\n  }\n  \n
      \ runtime {\n    cpu: 1\n    memory: \"2G\"\n  }\n}\n\ntask Task2 {\n  input
      {\n    String input_json\n    File previous_output\n  }\n  \n  command <<<\n
      \   echo \"Processing JSON in Task2: ~{input_json}\" > task2_output.txt\n    echo
      \"Task2 completed after Task1\" >> task2_output.txt\n    cat ~{previous_output}
      >> task2_output.txt\n  >>>\n  \n  output {\n    File output_file = \"task2_output.txt\"\n
      \ }\n  \n  runtime {\n    cpu: 1\n    memory: \"2G\"\n  }\n}\n\r\n--fff667ac35465e8f8e07c649cd1c7fcd\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"jsonTaskOrderTest.input_json\": \"I am the text
      that from input.json\"\n}\n\r\n--fff667ac35465e8f8e07c649cd1c7fcd\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--fff667ac35465e8f8e07c649cd1c7fcd--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1742'
      content-type:
      - multipart/form-data; boundary=fff667ac35465e8f8e07c649cd1c7fcd
      host:
      - gizmok79.fhcrc.org:45745
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok79.fhcrc.org:45745/api/workflows/v1
  response:
    body:
      string: '{"id":"d94c5d05-d052-4025-af89-3ad16ff62cf2","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Mon, 19 May 2025 17:37:21 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok79.fhcrc.org:45745
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok79.fhcrc.org:45745/api/workflows/v1/d94c5d05-d052-4025-af89-3ad16ff62cf2/metadata?expandSubWorkflows=true
  response:
    body:
      string: "{\n  \"status\": \"fail\",\n  \"message\": \"Unrecognized workflow
        ID: d94c5d05-d052-4025-af89-3ad16ff62cf2\"\n}"
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 19 May 2025 17:37:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '101'
    status:
      code: 404
      message: Not Found
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok79.fhcrc.org:45745
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok79.fhcrc.org:45745/api/workflows/v1/d94c5d05-d052-4025-af89-3ad16ff62cf2/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonTaskOrderTest
        {\n  input {\n    String input_json  # JSON string used as input for both
        tasks\n  }\n\n  call Task1 { input: input_json = input_json }\n  call Task2
        { input: input_json = input_json, previous_output = Task1.output_file }\n\n  output
        {\n    File task1_output = Task1.output_file\n    File task2_output = Task2.output_file\n  }\n}\n\ntask
        Task1 {\n  input {\n    String input_json\n  }\n  \n  command <<<\n    echo
        \"Processing JSON in Task1: ~{input_json}\" > task1_output.txt\n    echo \"Task1
        completed\" >> task1_output.txt\n  >>>\n  \n  output {\n    File output_file
        = \"task1_output.txt\"\n  }\n  \n  runtime {\n    cpu: 1\n    memory: \"2G\"\n  }\n}\n\ntask
        Task2 {\n  input {\n    String input_json\n    File previous_output\n  }\n  \n  command
        <<<\n    echo \"Processing JSON in Task2: ~{input_json}\" > task2_output.txt\n    echo
        \"Task2 completed after Task1\" >> task2_output.txt\n    cat ~{previous_output}
        >> task2_output.txt\n  >>>\n  \n  output {\n    File output_file = \"task2_output.txt\"\n  }\n  \n  runtime
        {\n    cpu: 1\n    memory: \"2G\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonTaskOrderTest.input_json\":\"I am the text that
        from input.json\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"d94c5d05-d052-4025-af89-3ad16ff62cf2","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-d94c5d05-d052-4025-af89-3ad16ff62cf2"},"submission":"2025-05-19T17:37:21.362Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 19 May 2025 17:37:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1630'
    status:
      code: 200
      message: OK
version: 1
