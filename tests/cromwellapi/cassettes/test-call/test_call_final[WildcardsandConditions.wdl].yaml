interactions:
- request:
    body: "--42aae2d5bb8c1cbe983e3f43a973edb1\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"WildcardsandConditions.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix
      \ # Required input for the file prefix (no default value)\n    }\n\n    call
      wildcard_and_conditions_test {\n        input:\n            prefix = prefix
      \ # Explicitly pass the workflow input to the task\n    }\n\n    output {\n
      \       Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
      conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
      wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
      input for file creation\n        Boolean create_extra_file = true  # Default
      value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
      .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
      \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
      an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
      ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n
      \       # Parse inputs directly in the command\n        echo \"Parsed prefix:
      ~{prefix}\" > parsed_output.txt\n    >>>\n\n    output {\n        Array[File]
      txt_files = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
      = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
      {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\r\n--42aae2d5bb8c1cbe983e3f43a973edb1\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"WildcardsandConditions.prefix\": \"testfile\"\n}\n\r\n--42aae2d5bb8c1cbe983e3f43a973edb1\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--42aae2d5bb8c1cbe983e3f43a973edb1--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2043'
      content-type:
      - multipart/form-data; boundary=42aae2d5bb8c1cbe983e3f43a973edb1
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1
  response:
    body:
      string: '{"id":"8e20cc7b-2633-45aa-a243-df91746855a6","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:46:38 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:46:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:46:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:46:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:46:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2608'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2608'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3824'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","backendStatus":"Running","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"jobId":"40428700","backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3869'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","backendStatus":"Running","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"jobId":"40428700","backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3869'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","backendStatus":"Running","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"jobId":"40428700","backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3869'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","backendStatus":"Running","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"jobId":"40428700","backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3869'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","backendStatus":"Running","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"jobId":"40428700","backend":"gizmo","attempt":1,"start":"2025-10-28T16:53:02.264Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3869'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/8e20cc7b-2633-45aa-a243-df91746855a6/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"Finished","timestamp":"2025-10-28T16:53:42.046Z","cromwellVersion":"87"},{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T16:53:00.185Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{"WildcardsandConditions.wildcard_and_conditions_test":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stdout","backendStatus":"Done","commandLine":"#
        Create multiple .txt files to test wildcard resolution\nfor i in {1..3}; do\n    echo
        \"File content $i\" > \"testfile_$i.txt\"\ndone\n\n# Create an extra file
        conditionally\nif [[ true == \"true\" ]]; then\n    echo \"Extra file content\"
        > testfile_extra.txt\nfi\n\n# Parse inputs directly in the command\necho \"Parsed
        prefix: testfile\" > parsed_output.txt","shardIndex":-1,"outputs":{"txt_files":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/parsed_output.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_1.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_2.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_3.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_extra.txt"],"conditional_output":"Parsed
        prefix: testfile"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"prefix":"testfile","create_extra_file":true},"returnCode":0,"jobId":"40428700","backend":"gizmo","start":"2025-10-28T16:53:02.264Z","end":"2025-10-28T16:53:40.779Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test","attempt":1,"executionEvents":[{"startTime":"2025-10-28T16:53:09.183Z","description":"WaitingForValueStore","endTime":"2025-10-28T16:53:09.184Z"},{"startTime":"2025-10-28T16:53:02.265Z","description":"RequestingExecutionToken","endTime":"2025-10-28T16:53:09.183Z"},{"startTime":"2025-10-28T16:53:09.200Z","description":"RunningJob","endTime":"2025-10-28T16:53:40.405Z"},{"startTime":"2025-10-28T16:53:02.265Z","description":"Pending","endTime":"2025-10-28T16:53:02.265Z"},{"startTime":"2025-10-28T16:53:09.184Z","description":"PreparingJob","endTime":"2025-10-28T16:53:09.200Z"},{"startTime":"2025-10-28T16:53:40.405Z","description":"UpdatingJobStore","endTime":"2025-10-28T16:53:40.779Z"}]}]},"outputs":{"WildcardsandConditions.conditional_result":"Parsed
        prefix: testfile","WildcardsandConditions.txt_files":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/parsed_output.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_1.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_2.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_3.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_extra.txt"]},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/8e20cc7b-2633-45aa-a243-df91746855a6","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-10-28T16:53:42.046Z","start":"2025-10-28T16:53:00.186Z","id":"8e20cc7b-2633-45aa-a243-df91746855a6","inputs":{"WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true,"prefix":"testfile"},"labels":{"cromwell-workflow-id":"cromwell-8e20cc7b-2633-45aa-a243-df91746855a6"},"submission":"2025-10-28T16:46:38.685Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '7156'
    status:
      code: 200
      message: OK
version: 1
