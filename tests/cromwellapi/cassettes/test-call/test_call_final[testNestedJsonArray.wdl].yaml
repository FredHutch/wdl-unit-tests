interactions:
- request:
    body: "--b99f4e628e04e3c7e23cb5710a45f177\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"testNestedJsonArray.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
      experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
      the main structure for the single sample\nstruct singleSample {\n    String
      sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
      details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
      {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples
      \ # Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
      {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
      = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
      together from each sample into one list\n    Array[File] result_allSampleInfo
      = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
      sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n
      \ command <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
      | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
      | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
      Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
      > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all sample
      info from the file and output it as an Array of Strings\n    File allSampleInfo
      = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker: \"ubuntu:20.04\"\n
      \ }\n}\n\r\n--b99f4e628e04e3c7e23cb5710a45f177\r\nContent-Disposition: form-data;
      name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type: application/json\r\n\r\n{\n
      \ \"testNestedJsonArray.cellNumber\": \"10000\",\n  \"testNestedJsonArray.batchOfSamples\":
      [\n    {\n      \"sampleName\": \"Sample1\",\n      \"aboutSample\": \"This
      is sample 1\",\n      \"sampleDescription\": \"Description of sample 1: A detailed
      description of the first sample.\",\n      \"details\": {\n        \"experimentType\":
      \"RNA-Seq\",\n        \"prepMethod\": \"TruSeq\",\n        \"tissueType\": \"blood\"\n
      \     }\n    },\n    {\n      \"sampleName\": \"Sample2\",\n      \"aboutSample\":
      \"This is sample 2\",\n      \"sampleDescription\": \"Description of sample
      2: A detailed description of the second sample.\",\n      \"details\": {\n        \"experimentType\":
      \"DNA-Seq\",\n        \"prepMethod\": \"Nextera\",\n        \"tissueType\":
      \"tissue biopsy\"\n      }\n    },\n    {\n      \"sampleName\": \"Sample3\",\n
      \     \"aboutSample\": \"This is sample 3\",\n      \"sampleDescription\": \"Description
      of sample 3: A detailed description of the third sample.\",\n      \"details\":
      {\n        \"experimentType\": \"ChIP-Seq\",\n        \"prepMethod\": \"Epigenome\",\n
      \       \"tissueType\": \"brain\"\n      }\n    }\n  ]\n}\n\r\n--b99f4e628e04e3c7e23cb5710a45f177\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--b99f4e628e04e3c7e23cb5710a45f177--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3208'
      content-type:
      - multipart/form-data; boundary=b99f4e628e04e3c7e23cb5710a45f177
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1
  response:
    body:
      string: '{"id":"844d6710-2042-42cd-819b-df47f10eab57","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:01 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"QueuedInCromwell","shardIndex":0,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z"},{"executionStatus":"QueuedInCromwell","shardIndex":1,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z"},{"executionStatus":"QueuedInCromwell","shardIndex":2,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4479'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"QueuedInCromwell","shardIndex":0,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z"},{"executionStatus":"QueuedInCromwell","shardIndex":1,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z"},{"executionStatus":"QueuedInCromwell","shardIndex":2,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4479'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1"},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '8545'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"jobId":"30943170","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"jobId":"30943167","backend":"gizmo","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1"},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"jobId":"30943169","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '8776'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"jobId":"30943170","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"jobId":"30943169","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9703'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"jobId":"30943170","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"jobId":"30943169","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9703'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"jobId":"30943170","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"jobId":"30943169","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9703'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"jobId":"30943170","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"jobId":"30943169","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9703'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Running","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"jobId":"30943170","backend":"gizmo","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0"},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"jobId":"30943169","backend":"gizmo","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","attempt":1,"start":"2025-08-31T03:49:46.796Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9799'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/Sample1.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"returnCode":0,"jobId":"30943170","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:32.660Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.616Z","description":"RunningJob","endTime":"2025-08-31T03:50:32.045Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.616Z"},{"startTime":"2025-08-31T03:50:32.045Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:32.660Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/Sample3.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"returnCode":0,"jobId":"30943169","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:29.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.620Z","description":"RunningJob","endTime":"2025-08-31T03:50:28.976Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:28.976Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:29.661Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.620Z"}]}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '11749'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/844d6710-2042-42cd-819b-df47f10eab57/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:49:42.684Z","cromwellVersion":"87"},{"cromwellId":"cromid-f88f429","description":"Finished","timestamp":"2025-08-31T03:50:34.737Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{"testNestedJsonArray.processSample":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample1
        | This is sample 1 | Description of sample 1: A detailed description of the
        first sample. | RNA-Seq | TruSeq | blood\"\n\n# Output the concatenated sample
        info to a file\necho \"${allSampleInfo}\" > Sample1.allSampleInfo.txt","shardIndex":0,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/Sample1.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample1","sample":{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}}},"returnCode":0,"jobId":"30943170","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:32.660Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.616Z","description":"RunningJob","endTime":"2025-08-31T03:50:32.045Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.616Z"},{"startTime":"2025-08-31T03:50:32.045Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:32.660Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample2
        | This is sample 2 | Description of sample 2: A detailed description of the
        second sample. | DNA-Seq | Nextera | tissue biopsy\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample2.allSampleInfo.txt","shardIndex":1,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample2","sample":{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}}},"returnCode":0,"jobId":"30943167","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:04.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.594Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:04.019Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:04.662Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.594Z"},{"startTime":"2025-08-31T03:49:55.610Z","description":"RunningJob","endTime":"2025-08-31T03:50:04.019Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.610Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"}]},{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stdout","backendStatus":"Done","commandLine":"#
        Format the sample information as a single string\nallSampleInfo=\"Sample3
        | This is sample 3 | Description of sample 3: A detailed description of the
        third sample. | ChIP-Seq | Epigenome | brain\"\n\n# Output the concatenated
        sample info to a file\necho \"${allSampleInfo}\" > Sample3.allSampleInfo.txt","shardIndex":2,"outputs":{"allSampleInfo":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/Sample3.allSampleInfo.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"base_file_name":"Sample3","sample":{"aboutSample":"This
        is sample 3","sampleName":"Sample3","sampleDescription":"Description of sample
        3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}},"returnCode":0,"jobId":"30943169","backend":"gizmo","start":"2025-08-31T03:49:46.796Z","end":"2025-08-31T03:50:29.661Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:49:55.620Z","description":"RunningJob","endTime":"2025-08-31T03:50:28.976Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"Pending","endTime":"2025-08-31T03:49:46.796Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:49:46.796Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:49:55.595Z"},{"startTime":"2025-08-31T03:50:28.976Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:50:29.661Z"},{"startTime":"2025-08-31T03:49:55.595Z","description":"PreparingJob","endTime":"2025-08-31T03:49:55.620Z"}]}]},"outputs":{"testNestedJsonArray.result_allSampleInfo":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-0/execution/Sample1.allSampleInfo.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57/call-processSample/shard-2/execution/Sample3.allSampleInfo.txt"]},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/844d6710-2042-42cd-819b-df47f10eab57","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-08-31T03:50:34.737Z","start":"2025-08-31T03:49:42.685Z","id":"844d6710-2042-42cd-819b-df47f10eab57","inputs":{"cellNumber":"10000","batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-844d6710-2042-42cd-819b-df47f10eab57"},"submission":"2025-08-31T03:27:01.531Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '12472'
    status:
      code: 200
      message: OK
version: 1
