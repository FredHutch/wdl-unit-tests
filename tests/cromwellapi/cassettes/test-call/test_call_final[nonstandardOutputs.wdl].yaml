interactions:
- request:
    body: "--4820b8e3a7385ca62957eec8f203db12\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"nonstandardOutputs.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n
      \   \n    output {\n        File special_chars = generate_diverse_outputs.file_special_chars\n
      \       File no_extension = generate_diverse_outputs.file_no_extension\n        File
      nested_output = generate_diverse_outputs.nested_file\n        File symlink_file
      = generate_diverse_outputs.symlink_output\n        Array[File] glob_files =
      generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
      {\n    command <<<\n        # File with special characters\n        echo \"test
      content\" > \"test@file#1.txt\"\n        \n        # File without extension\n
      \       echo \"no extension\" > datafile\n        \n        # Nested directory
      output\n        mkdir -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n
      \       \n        # Create a symlink\n        echo \"original\" > original.txt\n
      \       ln -s original.txt link.txt\n        \n        # Multiple pattern files\n
      \       for i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n
      \       done\n    >>>\n\n    output {\n        File file_special_chars = \"test@file#1.txt\"\n
      \       File file_no_extension = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n
      \       File symlink_output = \"link.txt\"\n        Array[File] pattern_files
      = glob(\"pattern_*.out\")\n    }\n\n    runtime {\n        docker: \"ubuntu:noble-20241118.1\"\n
      \   }\n}\n\r\n--4820b8e3a7385ca62957eec8f203db12\r\nContent-Disposition: form-data;
      name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type: application/json\r\n\r\n{\n
      \   \"workflow_failure_mode\": \"ContinueWhilePossible\",\n    \"write_to_cache\":
      false,\n    \"read_from_cache\": false\n}\n\r\n--4820b8e3a7385ca62957eec8f203db12--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1856'
      content-type:
      - multipart/form-data; boundary=4820b8e3a7385ca62957eec8f203db12
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1
  response:
    body:
      string: '{"id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:27 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:49:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:50:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:51:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow test_nonstandard_outputs
        {\n    call generate_diverse_outputs\n    \n    output {\n        File special_chars
        = generate_diverse_outputs.file_special_chars\n        File no_extension =
        generate_diverse_outputs.file_no_extension\n        File nested_output = generate_diverse_outputs.nested_file\n        File
        symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1899'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2496'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3731'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Running","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"jobId":"30943483","backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3776'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Running","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"jobId":"30943483","backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3776'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Running","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"jobId":"30943483","backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3776'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Running","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"jobId":"30943483","backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3776'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Running","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"jobId":"30943483","backend":"gizmo","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:52:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3776'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Done","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"jobId":"30943483","backend":"gizmo","dockerImageUsed":"ubuntu@sha256:80dd3c3b9c6cecb9f1667e9290b3bc61b78c2678c02cbdae5f0fea92cc6734ab","attempt":1,"start":"2025-08-31T03:52:23.966Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:53:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3872'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"test_nonstandard_outputs","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"Finished","timestamp":"2025-08-31T03:53:00.690Z","cromwellVersion":"87"},{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:52:22.915Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow test_nonstandard_outputs {\n    call generate_diverse_outputs\n    \n    output
        {\n        File special_chars = generate_diverse_outputs.file_special_chars\n        File
        no_extension = generate_diverse_outputs.file_no_extension\n        File nested_output
        = generate_diverse_outputs.nested_file\n        File symlink_file = generate_diverse_outputs.symlink_output\n        Array[File]
        glob_files = generate_diverse_outputs.pattern_files\n    }\n}\n\ntask generate_diverse_outputs
        {\n    command <<<\n        # File with special characters\n        echo \"test
        content\" > \"test@file#1.txt\"\n        \n        # File without extension\n        echo
        \"no extension\" > datafile\n        \n        # Nested directory output\n        mkdir
        -p nested/dir\n        echo \"nested content\" > nested/dir/test.txt\n        \n        #
        Create a symlink\n        echo \"original\" > original.txt\n        ln -s
        original.txt link.txt\n        \n        # Multiple pattern files\n        for
        i in {1..3}; do\n            echo \"pattern $i\" > \"pattern_$i.out\"\n        done\n    >>>\n\n    output
        {\n        File file_special_chars = \"test@file#1.txt\"\n        File file_no_extension
        = \"datafile\"\n        File nested_file = \"nested/dir/test.txt\"\n        File
        symlink_output = \"link.txt\"\n        Array[File] pattern_files = glob(\"pattern_*.out\")\n    }\n\n    runtime
        {\n        docker: \"ubuntu:noble-20241118.1\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{}","workflowUrl":"","labels":"{}"},"calls":{"test_nonstandard_outputs.generate_diverse_outputs":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stdout","backendStatus":"Done","commandLine":"#
        File with special characters\necho \"test content\" > \"test@file#1.txt\"\n\n#
        File without extension\necho \"no extension\" > datafile\n\n# Nested directory
        output\nmkdir -p nested/dir\necho \"nested content\" > nested/dir/test.txt\n\n#
        Create a symlink\necho \"original\" > original.txt\nln -s original.txt link.txt\n\n#
        Multiple pattern files\nfor i in {1..3}; do\n    echo \"pattern $i\" > \"pattern_$i.out\"\ndone","shardIndex":-1,"outputs":{"symlink_output":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/link.txt","file_no_extension":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/datafile","nested_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/nested/dir/test.txt","pattern_files":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/glob-4ded3a97b6654226f2cdd04e2711b93c/pattern_1.out","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/glob-4ded3a97b6654226f2cdd04e2711b93c/pattern_2.out","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/glob-4ded3a97b6654226f2cdd04e2711b93c/pattern_3.out"],"file_special_chars":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/test@file#1.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:noble-20241118.1","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{},"returnCode":0,"jobId":"30943483","backend":"gizmo","start":"2025-08-31T03:52:23.966Z","end":"2025-08-31T03:52:59.660Z","dockerImageUsed":"ubuntu@sha256:80dd3c3b9c6cecb9f1667e9290b3bc61b78c2678c02cbdae5f0fea92cc6734ab","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs","attempt":1,"executionEvents":[{"startTime":"2025-08-31T03:52:23.967Z","description":"Pending","endTime":"2025-08-31T03:52:23.967Z"},{"startTime":"2025-08-31T03:52:23.967Z","description":"RequestingExecutionToken","endTime":"2025-08-31T03:52:25.595Z"},{"startTime":"2025-08-31T03:52:25.595Z","description":"WaitingForValueStore","endTime":"2025-08-31T03:52:25.595Z"},{"startTime":"2025-08-31T03:52:58.842Z","description":"UpdatingJobStore","endTime":"2025-08-31T03:52:59.660Z"},{"startTime":"2025-08-31T03:52:25.595Z","description":"PreparingJob","endTime":"2025-08-31T03:52:25.607Z"},{"startTime":"2025-08-31T03:52:25.607Z","description":"RunningJob","endTime":"2025-08-31T03:52:58.842Z"}]}]},"outputs":{"test_nonstandard_outputs.symlink_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/link.txt","test_nonstandard_outputs.nested_output":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/nested/dir/test.txt","test_nonstandard_outputs.glob_files":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/glob-4ded3a97b6654226f2cdd04e2711b93c/pattern_1.out","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/glob-4ded3a97b6654226f2cdd04e2711b93c/pattern_2.out","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/glob-4ded3a97b6654226f2cdd04e2711b93c/pattern_3.out"],"test_nonstandard_outputs.no_extension":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/datafile","test_nonstandard_outputs.special_chars":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492/call-generate_diverse_outputs/execution/test@file#1.txt"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/test_nonstandard_outputs/f5f6a379-abe4-44ee-86f7-ee3dc82ec492","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-08-31T03:53:00.690Z","start":"2025-08-31T03:52:22.915Z","id":"f5f6a379-abe4-44ee-86f7-ee3dc82ec492","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-f5f6a379-abe4-44ee-86f7-ee3dc82ec492"},"submission":"2025-08-31T03:33:27.416Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:53:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '7671'
    status:
      code: 200
      message: OK
version: 1
