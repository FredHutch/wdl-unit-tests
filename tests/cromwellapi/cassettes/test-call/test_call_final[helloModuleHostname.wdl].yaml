interactions:
- request:
    body: "--dbf28e534b7675e4df5bdc9e7d4ad1c3\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"helloModuleHostname.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n## This is a test workflow that returns the hostname of the node \n## the
      job is submitted to as a test for module functionality on Gizmo.\n## Added verification
      of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
      {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default
      value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
      = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
      module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
      \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
      indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
      TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n
      \ command <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n
      \   \n    # List loaded modules and verify our module is loaded\n    source
      /app/lmod/lmod/init/profile\n    module list 2>&1 | tee module_list.txt\n    \n
      \   # Check if the module or its base name is in the loaded modules\n    if
      grep -q \"~{module_env}\" module_list.txt; then\n      echo \"true\" > module_verified.txt\n
      \     echo \"Successfully verified module ~{module_env} is loaded\"\n    else\n
      \     echo \"ERROR: Module ~{module_env} was not found in loaded modules:\"\n
      \     cat module_list.txt\n      exit 1\n    fi\n  >>>\n\n  output {\n    File
      out = stdout()\n    Boolean module_verified = read_boolean(\"module_verified.txt\")\n
      \ }\n\n  runtime {\n    cpu: 1\n    memory: \"1 GB\"\n    modules: \"~{module_env}\"\n
      \ }\n\n  parameter_meta {\n    module_env: \"name of modules to be loaded\"\n
      \   out: \"output file containing hostname and module information\"\n    module_verified:
      \"boolean indicating if the requested module was successfully loaded\"\n  }\n}\n\r\n--dbf28e534b7675e4df5bdc9e7d4ad1c3\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"HelloModuleHostname.module2load\": \"Python/3.12.3-GCCcore-13.3.0\"\n}\n\r\n--dbf28e534b7675e4df5bdc9e7d4ad1c3\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--dbf28e534b7675e4df5bdc9e7d4ad1c3--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2479'
      content-type:
      - multipart/form-data; boundary=dbf28e534b7675e4df5bdc9e7d4ad1c3
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1
  response:
    body:
      string: '{"id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:40:30 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:40:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:40:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:40:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:40:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:40:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:41:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:42:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:43:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:44:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:45:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:46:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:47:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:48:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:49:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:50:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2999'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4352'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Running","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"jobId":"27403760","backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4397'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Running","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"jobId":"27403760","backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4397'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Running","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"jobId":"27403760","backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4397'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Running","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"jobId":"27403760","backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4397'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Running","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"jobId":"27403760","backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:51:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4397'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Running","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"jobId":"27403760","backend":"gizmo","attempt":1,"start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:52:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4397'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok99.fhcrc.org:45631
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok99.fhcrc.org:45631/api/workflows/v1/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-d11bdb6","description":"PickedUp","timestamp":"2025-07-27T03:51:21.712Z","cromwellVersion":"87"},{"cromwellId":"cromid-d11bdb6","description":"Finished","timestamp":"2025-07-27T03:52:06.623Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{"HelloModuleHostname.Hostname":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","backendStatus":"Done","commandLine":"set
        -e  # Exit on any error\n\n# Get hostname\nhostname\n\n# List loaded modules
        and verify our module is loaded\nsource /app/lmod/lmod/init/profile\nmodule
        list 2>&1 | tee module_list.txt\n\n# Check if the module or its base name
        is in the loaded modules\nif grep -q \"Python/3.12.3-GCCcore-13.3.0\" module_list.txt;
        then\n  echo \"true\" > module_verified.txt\n  echo \"Successfully verified
        module Python/3.12.3-GCCcore-13.3.0 is loaded\"\nelse\n  echo \"ERROR: Module
        Python/3.12.3-GCCcore-13.3.0 was not found in loaded modules:\"\n  cat module_list.txt\n  exit
        1\nfi","shardIndex":-1,"outputs":{"out":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout","module_verified":true},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","modules":"Python/3.12.3-GCCcore-13.3.0","gpus":"0","maxRetries":"0","cpu":"1","memory":"1
        GB"},"callCaching":{"allowResultReuse":false,"effectiveCallCachingMode":"CallCachingOff"},"inputs":{"module_env":"Python/3.12.3-GCCcore-13.3.0"},"returnCode":0,"jobId":"27403760","backend":"gizmo","end":"2025-07-27T03:52:04.756Z","start":"2025-07-27T03:51:23.783Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname","attempt":1,"executionEvents":[{"startTime":"2025-07-27T03:51:23.783Z","description":"Pending","endTime":"2025-07-27T03:51:23.783Z"},{"startTime":"2025-07-27T03:52:03.823Z","description":"UpdatingJobStore","endTime":"2025-07-27T03:52:04.756Z"},{"startTime":"2025-07-27T03:51:23.783Z","description":"RequestingExecutionToken","endTime":"2025-07-27T03:51:27.001Z"},{"startTime":"2025-07-27T03:51:27.012Z","description":"RunningJob","endTime":"2025-07-27T03:52:03.823Z"},{"startTime":"2025-07-27T03:51:27.001Z","description":"WaitingForValueStore","endTime":"2025-07-27T03:51:27.002Z"},{"startTime":"2025-07-27T03:51:27.002Z","description":"PreparingJob","endTime":"2025-07-27T03:51:27.012Z"}]}]},"outputs":{"HelloModuleHostname.module_loaded":true,"HelloModuleHostname.stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0/call-Hostname/execution/stdout"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-07-27T03:52:06.623Z","start":"2025-07-27T03:51:21.712Z","id":"710e68d2-b5d0-46fb-b6ed-54b139a7cdb0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-710e68d2-b5d0-46fb-b6ed-54b139a7cdb0"},"submission":"2025-07-27T03:40:30.293Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 27 Jul 2025 03:52:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '5668'
    status:
      code: 200
      message: OK
version: 1
