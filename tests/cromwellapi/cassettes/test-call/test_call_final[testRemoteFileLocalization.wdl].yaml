interactions:
- request:
    body: "--93e8ce6fa17a8c245570331e574ca285\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"testRemoteFileLocalization.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String string\n
      \       Int integer\n        Float float\n        Boolean boolean\n        File
      remote_file\n    }\n\n    # Task 1: Test input localization and processing\n
      \   call testInputLocalization {\n        input:\n            input_string =
      string,\n            input_integer = integer,\n            input_float = float,\n
      \           input_boolean = boolean,\n            input_file = remote_file\n
      \   }\n\n    # Task 2: Use output from Task 1 as input\n    call testOutputUsage
      {\n        input:\n            processed_file = testInputLocalization.processed_file\n
      \   }\n\n    # Workflow outputs: include all outputs from all tasks\n    output
      {\n        File localized_file = testInputLocalization.processed_file\n        File
      localized_string = testInputLocalization.outputStringfile\n        File localized_integer
      = testInputLocalization.outputIntegerfile\n        File localized_float = testInputLocalization.outputFloatfile\n
      \       File localized_boolean = testInputLocalization.outputBooleanfile\n        File
      renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
      {\n    input {\n        String input_string\n        Int input_integer\n        Float
      input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n
      \   command <<<\n        # Generate and verify input-based outputs\n        echo
      \"~{input_string}\" > localized_string.txt\n        echo \"~{input_integer}\"
      > localized_integer.txt\n        echo \"~{input_float}\" > localized_float.txt\n
      \       echo \"~{input_boolean}\" > localized_boolean.txt\n\n        # Input
      file is expected to already be localized by WDL\n        ls -lh \"~{input_file}\"\n
      \   >>>\n\n    output {\n        File outputStringfile = \"localized_string.txt\"\n
      \       File outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
      = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n
      \       File processed_file = input_file  # Pass input file directly as output\n
      \   }\n\n    runtime {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage
      {\n    input {\n        File processed_file\n    }\n\n    command <<<\n        #
      Rename the file received from the previous task\n        mv ~{processed_file}
      renamed_file.txt\n    >>>\n\n    output {\n        File renamed_file = \"renamed_file.txt\"\n
      \   }\n\n    runtime {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\r\n--93e8ce6fa17a8c245570331e574ca285\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"testRemoteFileLocalization.string\": \"Test String
      Input\",\n  \"testRemoteFileLocalization.integer\": 123,\n  \"testRemoteFileLocalization.float\":
      9.81,\n  \"testRemoteFileLocalization.boolean\": false,\n  \"testRemoteFileLocalization.remote_file\":
      \"/fh/fast/_DaSL/proof_testing/remote_file.txt\"\n}\n\r\n--93e8ce6fa17a8c245570331e574ca285\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"final_workflow_outputs_dir\": \"/fh/fast/_DaSL/proof_testing/remoteOutputstorage\",\n
      \ \"use_relative_output_paths\": true\n}\n\r\n--93e8ce6fa17a8c245570331e574ca285--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3320'
      content-type:
      - multipart/form-data; boundary=93e8ce6fa17a8c245570331e574ca285
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1
  response:
    body:
      string: '{"id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:18 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:45:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-08-26T20:46:49.197Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3968'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-08-26T20:46:49.197Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3968'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:46:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '7921'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"QueuedInCromwell","shardIndex":-1,"backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '8088'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9332'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:47:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Running","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9377'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Running","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Done","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"jobId":"30024410","backend":"gizmo","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","attempt":1,"start":"2025-08-26T20:47:00.415Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage"}]},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:48:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '9473'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/metadata?expandSubWorkflows=true
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"Finished","timestamp":"2025-08-26T20:48:56.726Z","cromwellVersion":"87"},{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-26T20:46:47.097Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{"testRemoteFileLocalization.testInputLocalization":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stdout","shardIndex":-1,"outputs":{"outputIntegerfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","outputFloatfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","outputStringfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt","outputBooleanfile":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"E4DA3B7FBBCE2345D7772B0674A318D5","runtime
        attribute":{"continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA","failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E"},"output
        expression":{"File outputBooleanfile":"256ED26B06370F6E0C8F49C94E69E6B2","File
        outputIntegerfile":"4AFEC0C417ED400B7D25C7677E877978","File processed_file":"585BC876C968EF2702708C57247FC519","File
        outputFloatfile":"373152195FA0CC645E28BBD74FF6EF96","File outputStringfile":"A7737AFB61CC8F895F3D090F5DE940DF"},"input
        count":"E4DA3B7FBBCE2345D7772B0674A318D5","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"38367AF3F46CF80430FD2EF317A5AD72","input":{"String input_string":"930D46B11A4743CE2A9E4B95EE935EC0","Int
        input_integer":"202CB962AC59075B964B07152D234B70","Float input_float":"5C59868ECEF993A5D4039E7DE4CE5065","File
        input_file":"d464484e4acb4b56734537df9b39f8c4","Boolean input_boolean":"68934A3E9455FA72420237EB05902327"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":true,"result":"Cache
        Hit: 48a387a1-5888-4e5d-9be2-f8e30c337061:testRemoteFileLocalization.testInputLocalization:-1"},"inputs":{"input_boolean":false,"input_integer":123,"input_float":9.81,"input_string":"Test
        String Input","input_file":"/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"backend":"gizmo","end":"2025-08-26T20:46:58.663Z","start":"2025-08-26T20:46:49.197Z","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:46:55.611Z","description":"CallCacheReading","endTime":"2025-08-26T20:46:55.682Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"Pending","endTime":"2025-08-26T20:46:49.197Z"},{"startTime":"2025-08-26T20:46:49.197Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:46:55.595Z"},{"startTime":"2025-08-26T20:46:57.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:46:58.662Z"},{"startTime":"2025-08-26T20:46:55.682Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:46:57.705Z"},{"startTime":"2025-08-26T20:46:55.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:46:55.596Z"},{"startTime":"2025-08-26T20:46:55.596Z","description":"PreparingJob","endTime":"2025-08-26T20:46:55.611Z"}]}],"testRemoteFileLocalization.testOutputUsage":[{"executionStatus":"Done","stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stdout","backendStatus":"Done","commandLine":"#
        Rename the file received from the previous task\nmv /cromwell-executions/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/inputs/596888178/remote_file.txt
        renamed_file.txt","shardIndex":-1,"outputs":{"renamed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/renamed_file.txt"},"runtimeAttributes":{"failOnStderr":"false","partition":"campus-new","continueOnReturnCode":"0","docker":"ubuntu:20.04","modules":"","gpus":"0","maxRetries":"0","cpu":"1","memory":"1.953125
        GB"},"callCaching":{"allowResultReuse":true,"hashes":{"output count":"C4CA4238A0B923820DCC509A6F75849B","runtime
        attribute":{"failOnStderr":"68934A3E9455FA72420237EB05902327","docker":"1DBC5600688CFDEDF9E55AC739AFA41E","continueOnReturnCode":"CFCD208495D565EF66E7DFF9F98764DA"},"output
        expression":{"File renamed_file":"51FB488980382B919687D49BFCADC099"},"input
        count":"C4CA4238A0B923820DCC509A6F75849B","backend name":"00B6EE220EFAF25B88D10126BC21D1FA","command
        template":"CAF70DD4CCEB52D88E344AE480D578A9","input":{"File processed_file":"d464484e4acb4b56734537df9b39f8c4"}},"effectiveCallCachingMode":"ReadAndWriteCache","hit":false,"result":"Cache
        Miss"},"inputs":{"processed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt"},"returnCode":0,"jobId":"30024410","backend":"gizmo","start":"2025-08-26T20:47:00.415Z","end":"2025-08-26T20:48:55.662Z","dockerImageUsed":"ubuntu@sha256:8feb4d8ca5354def3d8fce243717141ce31e2c428701f6682bd2fafe15388214","stderr":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/stderr","callRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage","attempt":1,"executionEvents":[{"startTime":"2025-08-26T20:47:00.415Z","description":"RequestingExecutionToken","endTime":"2025-08-26T20:47:05.595Z"},{"startTime":"2025-08-26T20:48:54.705Z","description":"UpdatingJobStore","endTime":"2025-08-26T20:48:55.662Z"},{"startTime":"2025-08-26T20:47:05.603Z","description":"CallCacheReading","endTime":"2025-08-26T20:47:05.613Z"},{"startTime":"2025-08-26T20:47:05.613Z","description":"RunningJob","endTime":"2025-08-26T20:48:53.435Z"},{"startTime":"2025-08-26T20:47:05.596Z","description":"PreparingJob","endTime":"2025-08-26T20:47:05.603Z"},{"startTime":"2025-08-26T20:47:05.595Z","description":"WaitingForValueStore","endTime":"2025-08-26T20:47:05.596Z"},{"startTime":"2025-08-26T20:48:53.435Z","description":"UpdatingCallCache","endTime":"2025-08-26T20:48:54.705Z"},{"startTime":"2025-08-26T20:47:00.415Z","description":"Pending","endTime":"2025-08-26T20:47:00.415Z"}]}]},"outputs":{"testRemoteFileLocalization.localized_boolean":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt","testRemoteFileLocalization.localized_integer":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","testRemoteFileLocalization.renamed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testOutputUsage/execution/renamed_file.txt","testRemoteFileLocalization.localized_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","testRemoteFileLocalization.localized_float":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_float.txt","testRemoteFileLocalization.localized_string":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b/call-testInputLocalization/cacheCopy/execution/localized_string.txt"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-08-26T20:48:56.726Z","start":"2025-08-26T20:46:47.098Z","id":"ca8196c8-6522-4be2-a71f-9e4f5afe3e6b","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-ca8196c8-6522-4be2-a71f-9e4f5afe3e6b"},"submission":"2025-08-26T20:45:18.646Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 26 Aug 2025 20:49:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '12686'
    status:
      code: 200
      message: OK
version: 1
