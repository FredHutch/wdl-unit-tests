interactions:
- request:
    body: "--0d3d0411ed330dbc2695a7f7d266ae64\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"helloModuleHostname.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n## This is a test workflow that returns the hostname of the node \n## the
      job is submitted to as a test for module functionality on Gizmo.\n## Added verification
      of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
      {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default
      value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
      = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
      module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
      \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
      indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
      TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n
      \ command <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n
      \   \n    # List loaded modules and verify our module is loaded\n    source
      /app/lmod/lmod/init/profile\n    module list 2>&1 | tee module_list.txt\n    \n
      \   # Check if the module or its base name is in the loaded modules\n    if
      grep -q \"~{module_env}\" module_list.txt; then\n      echo \"true\" > module_verified.txt\n
      \     echo \"Successfully verified module ~{module_env} is loaded\"\n    else\n
      \     echo \"ERROR: Module ~{module_env} was not found in loaded modules:\"\n
      \     cat module_list.txt\n      exit 1\n    fi\n  >>>\n\n  output {\n    File
      out = stdout()\n    Boolean module_verified = read_boolean(\"module_verified.txt\")\n
      \ }\n\n  runtime {\n    cpu: 1\n    memory: \"1 GB\"\n    modules: \"~{module_env}\"\n
      \ }\n\n  parameter_meta {\n    module_env: \"name of modules to be loaded\"\n
      \   out: \"output file containing hostname and module information\"\n    module_verified:
      \"boolean indicating if the requested module was successfully loaded\"\n  }\n}\n\r\n--0d3d0411ed330dbc2695a7f7d266ae64\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"HelloModuleHostname.module2load\": \"Python/3.12.3-GCCcore-13.3.0\"\n}\n\r\n--0d3d0411ed330dbc2695a7f7d266ae64\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--0d3d0411ed330dbc2695a7f7d266ae64--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2479'
      content-type:
      - multipart/form-data; boundary=0d3d0411ed330dbc2695a7f7d266ae64
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1
  response:
    body:
      string: '{"id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:17 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:30:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:31:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:32:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:33:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:34:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:35:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:36:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:37:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:38:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:39:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:40:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:41:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:42:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:43:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:44:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:45:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:46:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:47:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:48:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:49:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:50:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:51:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:52:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:52:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok20.fhcrc.org:46789
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok20.fhcrc.org:46789/api/workflows/v1/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-20c7f37","description":"PickedUp","timestamp":"2025-08-11T18:50:14.951Z","cromwellVersion":"87"},{"cromwellId":"cromid-20c7f37","description":"Finished","timestamp":"2025-08-11T18:52:09.224Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"HelloModuleHostname.module_loaded":true,"HelloModuleHostname.stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a/call-Hostname/execution/stdout"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/b2ee2b67-fc59-40f4-8d9d-862db1b8193a","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-08-11T18:52:09.224Z","start":"2025-08-11T18:50:14.952Z","id":"b2ee2b67-fc59-40f4-8d9d-862db1b8193a","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-b2ee2b67-fc59-40f4-8d9d-862db1b8193a"},"submission":"2025-08-11T18:30:17.653Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Mon, 11 Aug 2025 18:52:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3213'
    status:
      code: 200
      message: OK
version: 1
