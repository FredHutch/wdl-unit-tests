interactions:
- request:
    body: "--cc53e5e27c33334253cfb38d58a7d961\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"helloModuleHostname.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n## This is a test workflow that returns the hostname of the node \n## the
      job is submitted to as a test for module functionality on Gizmo.\n## Added verification
      of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
      {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default
      value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
      = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
      module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
      \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
      indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
      TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n
      \ command <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n
      \   \n    # List loaded modules and verify our module is loaded\n    source
      /app/lmod/lmod/init/profile\n    module list 2>&1 | tee module_list.txt\n    \n
      \   # Check if the module or its base name is in the loaded modules\n    if
      grep -q \"~{module_env}\" module_list.txt; then\n      echo \"true\" > module_verified.txt\n
      \     echo \"Successfully verified module ~{module_env} is loaded\"\n    else\n
      \     echo \"ERROR: Module ~{module_env} was not found in loaded modules:\"\n
      \     cat module_list.txt\n      exit 1\n    fi\n  >>>\n\n  output {\n    File
      out = stdout()\n    Boolean module_verified = read_boolean(\"module_verified.txt\")\n
      \ }\n\n  runtime {\n    cpu: 1\n    memory: \"1 GB\"\n    modules: \"~{module_env}\"\n
      \ }\n\n  parameter_meta {\n    module_env: \"name of modules to be loaded\"\n
      \   out: \"output file containing hostname and module information\"\n    module_verified:
      \"boolean indicating if the requested module was successfully loaded\"\n  }\n}\n\r\n--cc53e5e27c33334253cfb38d58a7d961\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"HelloModuleHostname.module2load\": \"Python/3.12.3-GCCcore-13.3.0\"\n}\n\r\n--cc53e5e27c33334253cfb38d58a7d961\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--cc53e5e27c33334253cfb38d58a7d961--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2479'
      content-type:
      - multipart/form-data; boundary=cc53e5e27c33334253cfb38d58a7d961
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1
  response:
    body:
      string: '{"id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:38 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:01:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:02:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:03:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:04:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:05:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:06:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:07:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:08:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n## This is a test workflow
        that returns the hostname of the node \n## the job is submitted to as a test
        for module functionality on Gizmo.\n## Added verification of module loading.\n\n####
        WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname {\n  input {\n    String
        module2load = \"Python/3.12.3-GCCcore-13.3.0\" # Default value can be overwritten\n  }\n\n  call
        Hostname {\n    input:\n      module_env = module2load\n  }\n\n  output {\n    File
        stdout = Hostname.out\n    Boolean module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta
        {\n    stdout: \"hostname of the node the job was submitted to\"\n    module_loaded:
        \"boolean indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2389'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:09:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:10:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:10:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:10:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:10:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2847'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"HelloModuleHostname","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"Finished","timestamp":"2025-07-06T04:10:14.224Z","cromwellVersion":"87"},{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:09:30.331Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n## This is a test workflow that returns the hostname of the node \n##
        the job is submitted to as a test for module functionality on Gizmo.\n## Added
        verification of module loading.\n\n#### WORKFLOW DEFINITION\n\nworkflow HelloModuleHostname
        {\n  input {\n    String module2load = \"Python/3.12.3-GCCcore-13.3.0\" #
        Default value can be overwritten\n  }\n\n  call Hostname {\n    input:\n      module_env
        = module2load\n  }\n\n  output {\n    File stdout = Hostname.out\n    Boolean
        module_loaded = Hostname.module_verified\n  }\n\n  parameter_meta {\n    stdout:
        \"hostname of the node the job was submitted to\"\n    module_loaded: \"boolean
        indicating if the specified module was successfully loaded\"\n  }\n}\n\n####
        TASK DEFINITIONS\n\ntask Hostname {\n  input {\n    String module_env\n  }\n\n  command
        <<<\n    set -e  # Exit on any error\n    \n    # Get hostname\n    hostname\n    \n    #
        List loaded modules and verify our module is loaded\n    source /app/lmod/lmod/init/profile\n    module
        list 2>&1 | tee module_list.txt\n    \n    # Check if the module or its base
        name is in the loaded modules\n    if grep -q \"~{module_env}\" module_list.txt;
        then\n      echo \"true\" > module_verified.txt\n      echo \"Successfully
        verified module ~{module_env} is loaded\"\n    else\n      echo \"ERROR: Module
        ~{module_env} was not found in loaded modules:\"\n      cat module_list.txt\n      exit
        1\n    fi\n  >>>\n\n  output {\n    File out = stdout()\n    Boolean module_verified
        = read_boolean(\"module_verified.txt\")\n  }\n\n  runtime {\n    cpu: 1\n    memory:
        \"1 GB\"\n    modules: \"~{module_env}\"\n  }\n\n  parameter_meta {\n    module_env:
        \"name of modules to be loaded\"\n    out: \"output file containing hostname
        and module information\"\n    module_verified: \"boolean indicating if the
        requested module was successfully loaded\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"HelloModuleHostname.module2load\":\"Python/3.12.3-GCCcore-13.3.0\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"HelloModuleHostname.module_loaded":true,"HelloModuleHostname.stdout":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0/call-Hostname/execution/stdout"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/HelloModuleHostname/cf54f5a6-a6c9-4a86-980c-2c222b7848e0","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-07-06T04:10:14.224Z","start":"2025-07-06T04:09:30.331Z","id":"cf54f5a6-a6c9-4a86-980c-2c222b7848e0","inputs":{"module2load":"Python/3.12.3-GCCcore-13.3.0"},"labels":{"cromwell-workflow-id":"cromwell-cf54f5a6-a6c9-4a86-980c-2c222b7848e0"},"submission":"2025-07-06T04:00:38.470Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:10:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3213'
    status:
      code: 200
      message: OK
version: 1
