interactions:
- request:
    body: "--e11ac3bdc8ba52cd224b946cef156170\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"jsonFilelocalization.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
      required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
      optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
      to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n
      \     required_remote = required_json_remote,\n      optional_remote = optional_json_remote,\n
      \     optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
      {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
      {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
      optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir -p
      copied_jsons\n    \n    # Copy the required local and remote files\n    cp ~{required_remote}
      copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename
      ~{optional_remote})\n    cp ~{optional_remote_not_provided} copied_jsons/$(basename
      ~{optional_remote_not_provided})\n    \n  >>>\n\n  output {\n    Array[File]
      out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime {\n    docker: \"ubuntu:20.04\"\n
      \ }\n}\n\r\n--e11ac3bdc8ba52cd224b946cef156170\r\nContent-Disposition: form-data;
      name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type: application/json\r\n\r\n{\n
      \ \"jsonFileLocalization.required_json_remote\": \"/fh/fast/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\",\n
      \ \"jsonFileLocalization.optional_json_remote\": \"/fh/fast/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\"\n}\n\r\n--e11ac3bdc8ba52cd224b946cef156170\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--e11ac3bdc8ba52cd224b946cef156170--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2031'
      content-type:
      - multipart/form-data; boundary=e11ac3bdc8ba52cd224b946cef156170
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1
  response:
    body:
      string: '{"id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:46:59 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:47:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:48:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:49:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:50:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:51:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:52:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:53:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:54:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:55:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:56:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:57:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:58:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 16:59:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:00:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:01:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:02:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:03:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:04:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:05:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:06:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:07:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:08:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:09:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow jsonFileLocalization
        {\n  input {\n    # Required inputs\n    File required_json_remote     # Remote
        JSON file\n    \n    # Optional inputs\n    File? optional_json_remote\n    File?
        optional_remote_not_provided\n  }\n\n  # Task to copy JSON files to the working
        directory\n  call CopyJsons {\n    input:\n      required_remote = required_json_remote,\n      optional_remote
        = optional_json_remote,\n      optional_remote_not_provided = optional_remote_not_provided\n  }\n\n  output
        {\n    Array[File] copied_files = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons
        {\n  input {\n    File required_remote\n    File? optional_remote\n    File?
        optional_remote_not_provided\n  }\n\n  command <<<\n    set -e\n    mkdir
        -p copied_jsons\n    \n    # Copy the required local and remote files\n    cp
        ~{required_remote} copied_jsons/$(basename ~{required_remote})\n    cp ~{optional_remote}
        copied_jsons/$(basename ~{optional_remote})\n    cp ~{optional_remote_not_provided}
        copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1898'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2565'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok49.fhcrc.org:32951
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok49.fhcrc.org:32951/api/workflows/v1/bbbd7c03-b311-47f5-8366-0f12195c9eaa/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"jsonFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-7248ac8","description":"Finished","timestamp":"2025-10-28T17:10:42.555Z","cromwellVersion":"87"},{"cromwellId":"cromid-7248ac8","description":"PickedUp","timestamp":"2025-10-28T17:10:01.714Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow jsonFileLocalization {\n  input {\n    # Required inputs\n    File
        required_json_remote     # Remote JSON file\n    \n    # Optional inputs\n    File?
        optional_json_remote\n    File? optional_remote_not_provided\n  }\n\n  # Task
        to copy JSON files to the working directory\n  call CopyJsons {\n    input:\n      required_remote
        = required_json_remote,\n      optional_remote = optional_json_remote,\n      optional_remote_not_provided
        = optional_remote_not_provided\n  }\n\n  output {\n    Array[File] copied_files
        = CopyJsons.out_files\n  }\n}\n\ntask CopyJsons {\n  input {\n    File required_remote\n    File?
        optional_remote\n    File? optional_remote_not_provided\n  }\n\n  command
        <<<\n    set -e\n    mkdir -p copied_jsons\n    \n    # Copy the required
        local and remote files\n    cp ~{required_remote} copied_jsons/$(basename
        ~{required_remote})\n    cp ~{optional_remote} copied_jsons/$(basename ~{optional_remote})\n    cp
        ~{optional_remote_not_provided} copied_jsons/$(basename ~{optional_remote_not_provided})\n    \n  >>>\n\n  output
        {\n    Array[File] out_files = glob(\"copied_jsons/*\")\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"jsonFileLocalization.optional_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt\",\"jsonFileLocalization.required_json_remote\":\"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"jsonFileLocalization.copied_files":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa/call-CopyJsons/execution/glob-f9e378b03f46c0bec01ac2b6abc5f8ec/local_remote_optional_file_2.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa/call-CopyJsons/execution/glob-f9e378b03f46c0bec01ac2b6abc5f8ec/local_remote_required_file_2.txt"]},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/jsonFileLocalization/bbbd7c03-b311-47f5-8366-0f12195c9eaa","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-10-28T17:10:42.555Z","start":"2025-10-28T17:10:01.714Z","id":"bbbd7c03-b311-47f5-8366-0f12195c9eaa","inputs":{"optional_remote_not_provided":null,"optional_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_optional_file_2.txt","required_json_remote":"/redacted/_DaSL/proof_testing/jsonFilelocalization/local_remote_required_file_2.txt"},"labels":{"cromwell-workflow-id":"cromwell-bbbd7c03-b311-47f5-8366-0f12195c9eaa"},"submission":"2025-10-28T16:46:59.219Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Tue, 28 Oct 2025 17:10:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3174'
    status:
      code: 200
      message: OK
version: 1
