interactions:
- request:
    body: "--98adc220f32ba301e3cafbb58d59f81b\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"testNestedJsonArray.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
      experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
      the main structure for the single sample\nstruct singleSample {\n    String
      sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
      details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
      {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples
      \ # Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
      {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
      = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
      together from each sample into one list\n    Array[File] result_allSampleInfo
      = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
      sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n
      \ command <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
      | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
      | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
      Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
      > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all sample
      info from the file and output it as an Array of Strings\n    File allSampleInfo
      = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker: \"ubuntu:20.04\"\n
      \ }\n}\n\r\n--98adc220f32ba301e3cafbb58d59f81b\r\nContent-Disposition: form-data;
      name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type: application/json\r\n\r\n{\n
      \ \"testNestedJsonArray.cellNumber\": \"10000\",\n  \"testNestedJsonArray.batchOfSamples\":
      [\n    {\n      \"sampleName\": \"Sample1\",\n      \"aboutSample\": \"This
      is sample 1\",\n      \"sampleDescription\": \"Description of sample 1: A detailed
      description of the first sample.\",\n      \"details\": {\n        \"experimentType\":
      \"RNA-Seq\",\n        \"prepMethod\": \"TruSeq\",\n        \"tissueType\": \"blood\"\n
      \     }\n    },\n    {\n      \"sampleName\": \"Sample2\",\n      \"aboutSample\":
      \"This is sample 2\",\n      \"sampleDescription\": \"Description of sample
      2: A detailed description of the second sample.\",\n      \"details\": {\n        \"experimentType\":
      \"DNA-Seq\",\n        \"prepMethod\": \"Nextera\",\n        \"tissueType\":
      \"tissue biopsy\"\n      }\n    },\n    {\n      \"sampleName\": \"Sample3\",\n
      \     \"aboutSample\": \"This is sample 3\",\n      \"sampleDescription\": \"Description
      of sample 3: A detailed description of the third sample.\",\n      \"details\":
      {\n        \"experimentType\": \"ChIP-Seq\",\n        \"prepMethod\": \"Epigenome\",\n
      \       \"tissueType\": \"brain\"\n      }\n    }\n  ]\n}\n\r\n--98adc220f32ba301e3cafbb58d59f81b\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--98adc220f32ba301e3cafbb58d59f81b--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3208'
      content-type:
      - multipart/form-data; boundary=98adc220f32ba301e3cafbb58d59f81b
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1
  response:
    body:
      string: '{"id":"03abf93b-3a87-427b-9b02-eeb945f87de3","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:51:33 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:51:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:51:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:51:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:51:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:51:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:52:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:53:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:54:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:55:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:56:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:57:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:58:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 03:59:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:00:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:01:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:02:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:03:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:04:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:05:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:06:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:07:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:08:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:09:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:10:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok120.fhcrc.org:42381
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok120.fhcrc.org:42381/api/workflows/v1/03abf93b-3a87-427b-9b02-eeb945f87de3/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-803eda2","description":"Finished","timestamp":"2025-10-26T04:11:44.482Z","cromwellVersion":"87"},{"cromwellId":"cromid-803eda2","description":"PickedUp","timestamp":"2025-10-26T04:10:49.377Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"testNestedJsonArray.result_allSampleInfo":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3/call-processSample/shard-0/execution/Sample1.allSampleInfo.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3/call-processSample/shard-2/execution/Sample3.allSampleInfo.txt"]},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/03abf93b-3a87-427b-9b02-eeb945f87de3","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-10-26T04:11:44.482Z","start":"2025-10-26T04:10:49.378Z","id":"03abf93b-3a87-427b-9b02-eeb945f87de3","inputs":{"cellNumber":"10000","batchOfSamples":[{"sampleName":"Sample1","details":{"experimentType":"RNA-Seq","tissueType":"blood","prepMethod":"TruSeq"},"aboutSample":"This
        is sample 1","sampleDescription":"Description of sample 1: A detailed description
        of the first sample."},{"aboutSample":"This is sample 2","sampleName":"Sample2","sampleDescription":"Description
        of sample 2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}]},"labels":{"cromwell-workflow-id":"cromwell-03abf93b-3a87-427b-9b02-eeb945f87de3"},"submission":"2025-10-26T03:51:33.829Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 26 Oct 2025 04:11:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4808'
    status:
      code: 200
      message: OK
version: 1
