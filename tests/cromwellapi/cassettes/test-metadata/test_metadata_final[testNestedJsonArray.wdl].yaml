interactions:
- request:
    body: "--6c217aaacc595cb04c7ab0b5e86378a8\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"testNestedJsonArray.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
      experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
      the main structure for the single sample\nstruct singleSample {\n    String
      sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
      details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
      {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples
      \ # Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
      {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
      = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
      together from each sample into one list\n    Array[File] result_allSampleInfo
      = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
      sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n
      \ command <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
      | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
      | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
      Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
      > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all sample
      info from the file and output it as an Array of Strings\n    File allSampleInfo
      = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker: \"ubuntu:20.04\"\n
      \ }\n}\n\r\n--6c217aaacc595cb04c7ab0b5e86378a8\r\nContent-Disposition: form-data;
      name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type: application/json\r\n\r\n{\n
      \ \"testNestedJsonArray.cellNumber\": \"10000\",\n  \"testNestedJsonArray.batchOfSamples\":
      [\n    {\n      \"sampleName\": \"Sample1\",\n      \"aboutSample\": \"This
      is sample 1\",\n      \"sampleDescription\": \"Description of sample 1: A detailed
      description of the first sample.\",\n      \"details\": {\n        \"experimentType\":
      \"RNA-Seq\",\n        \"prepMethod\": \"TruSeq\",\n        \"tissueType\": \"blood\"\n
      \     }\n    },\n    {\n      \"sampleName\": \"Sample2\",\n      \"aboutSample\":
      \"This is sample 2\",\n      \"sampleDescription\": \"Description of sample
      2: A detailed description of the second sample.\",\n      \"details\": {\n        \"experimentType\":
      \"DNA-Seq\",\n        \"prepMethod\": \"Nextera\",\n        \"tissueType\":
      \"tissue biopsy\"\n      }\n    },\n    {\n      \"sampleName\": \"Sample3\",\n
      \     \"aboutSample\": \"This is sample 3\",\n      \"sampleDescription\": \"Description
      of sample 3: A detailed description of the third sample.\",\n      \"details\":
      {\n        \"experimentType\": \"ChIP-Seq\",\n        \"prepMethod\": \"Epigenome\",\n
      \       \"tissueType\": \"brain\"\n      }\n    }\n  ]\n}\n\r\n--6c217aaacc595cb04c7ab0b5e86378a8\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--6c217aaacc595cb04c7ab0b5e86378a8--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3208'
      content-type:
      - multipart/form-data; boundary=6c217aaacc595cb04c7ab0b5e86378a8
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1
  response:
    body:
      string: '{"id":"ba326de6-64f7-4b53-a588-548c900fdcaf","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:28 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:48:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:49:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:50:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:51:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:52:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:53:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:54:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:55:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:56:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:57:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:58:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 03:59:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:00:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:01:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:02:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:03:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:04:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:05:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:06:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:07:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\n# Define the structure
        for sampleDetails\nstruct sampleDetails {\n    String experimentType\n    String
        prepMethod\n    String tissueType\n}\n\n# Define the main structure for the
        single sample\nstruct singleSample {\n    String sampleName\n    String aboutSample\n    String
        sampleDescription\n    sampleDetails details  # Use the sampleDetails struct
        here\n}\n\nworkflow testNestedJsonArray {\n  input {\n    String cellNumber\n    Array[singleSample]
        batchOfSamples  # Array of objects representing each sample\n  }\n\n  scatter
        (sample in batchOfSamples) {\n    call processSample {\n      input:\n        sample
        = sample,\n        base_file_name = sample.sampleName \n    }\n  }\n\n  output
        {\n    # Collect all the fields together from each sample into one list\n    Array[File]
        result_allSampleInfo = processSample.allSampleInfo\n  }\n}\n\ntask processSample
        {\n  input {\n    singleSample sample  # Use singleSample type, not Object\n    String
        base_file_name\n  }\n\n  command <<<\n    # Format the sample information
        as a single string\n    allSampleInfo=\"~{sample.sampleName} | ~{sample.aboutSample}
        | ~{sample.sampleDescription} | ~{sample.details.experimentType} | ~{sample.details.prepMethod}
        | ~{sample.details.tissueType}\"\n    \n    # Output the concatenated sample
        info to a file\n    echo \"${allSampleInfo}\" > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output
        {\n    # Read all sample info from the file and output it as an Array of Strings\n    File
        allSampleInfo = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime
        {\n    docker: \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2925'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4085'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj5.fhcrc.org:33817
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj5.fhcrc.org:33817/api/workflows/v1/ba326de6-64f7-4b53-a588-548c900fdcaf/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testNestedJsonArray","workflowProcessingEvents":[{"cromwellId":"cromid-8c8d93d","description":"Finished","timestamp":"2025-09-07T04:08:52.284Z","cromwellVersion":"87"},{"cromwellId":"cromid-8c8d93d","description":"PickedUp","timestamp":"2025-09-07T04:08:18.582Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\n# Define the structure for sampleDetails\nstruct sampleDetails {\n    String
        experimentType\n    String prepMethod\n    String tissueType\n}\n\n# Define
        the main structure for the single sample\nstruct singleSample {\n    String
        sampleName\n    String aboutSample\n    String sampleDescription\n    sampleDetails
        details  # Use the sampleDetails struct here\n}\n\nworkflow testNestedJsonArray
        {\n  input {\n    String cellNumber\n    Array[singleSample] batchOfSamples  #
        Array of objects representing each sample\n  }\n\n  scatter (sample in batchOfSamples)
        {\n    call processSample {\n      input:\n        sample = sample,\n        base_file_name
        = sample.sampleName \n    }\n  }\n\n  output {\n    # Collect all the fields
        together from each sample into one list\n    Array[File] result_allSampleInfo
        = processSample.allSampleInfo\n  }\n}\n\ntask processSample {\n  input {\n    singleSample
        sample  # Use singleSample type, not Object\n    String base_file_name\n  }\n\n  command
        <<<\n    # Format the sample information as a single string\n    allSampleInfo=\"~{sample.sampleName}
        | ~{sample.aboutSample} | ~{sample.sampleDescription} | ~{sample.details.experimentType}
        | ~{sample.details.prepMethod} | ~{sample.details.tissueType}\"\n    \n    #
        Output the concatenated sample info to a file\n    echo \"${allSampleInfo}\"
        > ~{base_file_name}.allSampleInfo.txt\n  >>>\n\n  output {\n    # Read all
        sample info from the file and output it as an Array of Strings\n    File allSampleInfo
        = \"${base_file_name}.allSampleInfo.txt\"\n  }\n\n  runtime {\n    docker:
        \"ubuntu:20.04\"\n  }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"testNestedJsonArray.batchOfSamples\":[{\"aboutSample\":\"This
        is sample 1\",\"details\":{\"experimentType\":\"RNA-Seq\",\"prepMethod\":\"TruSeq\",\"tissueType\":\"blood\"},\"sampleDescription\":\"Description
        of sample 1: A detailed description of the first sample.\",\"sampleName\":\"Sample1\"},{\"aboutSample\":\"This
        is sample 2\",\"details\":{\"experimentType\":\"DNA-Seq\",\"prepMethod\":\"Nextera\",\"tissueType\":\"tissue
        biopsy\"},\"sampleDescription\":\"Description of sample 2: A detailed description
        of the second sample.\",\"sampleName\":\"Sample2\"},{\"aboutSample\":\"This
        is sample 3\",\"details\":{\"experimentType\":\"ChIP-Seq\",\"prepMethod\":\"Epigenome\",\"tissueType\":\"brain\"},\"sampleDescription\":\"Description
        of sample 3: A detailed description of the third sample.\",\"sampleName\":\"Sample3\"}],\"testNestedJsonArray.cellNumber\":\"10000\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"testNestedJsonArray.result_allSampleInfo":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf/call-processSample/shard-0/execution/Sample1.allSampleInfo.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf/call-processSample/shard-1/execution/Sample2.allSampleInfo.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf/call-processSample/shard-2/execution/Sample3.allSampleInfo.txt"]},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testNestedJsonArray/ba326de6-64f7-4b53-a588-548c900fdcaf","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-09-07T04:08:52.284Z","start":"2025-09-07T04:08:18.583Z","id":"ba326de6-64f7-4b53-a588-548c900fdcaf","inputs":{"batchOfSamples":[{"aboutSample":"This
        is sample 1","sampleName":"Sample1","sampleDescription":"Description of sample
        1: A detailed description of the first sample.","details":{"prepMethod":"TruSeq","experimentType":"RNA-Seq","tissueType":"blood"}},{"aboutSample":"This
        is sample 2","sampleName":"Sample2","sampleDescription":"Description of sample
        2: A detailed description of the second sample.","details":{"prepMethod":"Nextera","experimentType":"DNA-Seq","tissueType":"tissue
        biopsy"}},{"aboutSample":"This is sample 3","sampleName":"Sample3","sampleDescription":"Description
        of sample 3: A detailed description of the third sample.","details":{"prepMethod":"Epigenome","experimentType":"ChIP-Seq","tissueType":"brain"}}],"cellNumber":"10000"},"labels":{"cromwell-workflow-id":"cromwell-ba326de6-64f7-4b53-a588-548c900fdcaf"},"submission":"2025-09-07T03:48:28.893Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 07 Sep 2025 04:08:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '4808'
    status:
      code: 200
      message: OK
version: 1
