interactions:
- request:
    body: "--be69ec75005f4233043a284f874dbe7a\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"WildcardsandConditions.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix
      \ # Required input for the file prefix (no default value)\n    }\n\n    call
      wildcard_and_conditions_test {\n        input:\n            prefix = prefix
      \ # Explicitly pass the workflow input to the task\n    }\n\n    output {\n
      \       Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
      conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
      wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
      input for file creation\n        Boolean create_extra_file = true  # Default
      value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
      .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
      \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
      an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
      ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n
      \       # Parse inputs directly in the command\n        echo \"Parsed prefix:
      ~{prefix}\" > parsed_output.txt\n    >>>\n\n    output {\n        Array[File]
      txt_files = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
      = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
      {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\r\n--be69ec75005f4233043a284f874dbe7a\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"WildcardsandConditions.prefix\": \"testfile\"\n}\n\r\n--be69ec75005f4233043a284f874dbe7a\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n    \"workflow_failure_mode\": \"ContinueWhilePossible\",\n
      \   \"write_to_cache\": false,\n    \"read_from_cache\": false\n}\n\r\n--be69ec75005f4233043a284f874dbe7a--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2043'
      content-type:
      - multipart/form-data; boundary=be69ec75005f4233043a284f874dbe7a
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1
  response:
    body:
      string: '{"id":"9c0634f3-1bf7-400b-ad5a-718516161c24","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:36:48 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:36:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:36:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:37:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:38:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:39:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:40:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:41:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:42:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:43:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:44:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:45:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:46:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:47:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:48:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:49:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:50:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:51:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:52:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:53:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:54:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:55:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:56:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:57:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:58:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 03:59:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow WildcardsandConditions
        {\n    input {\n        String prefix  # Required input for the file prefix
        (no default value)\n    }\n\n    call wildcard_and_conditions_test {\n        input:\n            prefix
        = prefix  # Explicitly pass the workflow input to the task\n    }\n\n    output
        {\n        Array[File] txt_files = wildcard_and_conditions_test.txt_files\n        String
        conditional_result = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask
        wildcard_and_conditions_test {\n    input {\n        String prefix  # Required
        input for file creation\n        Boolean create_extra_file = true  # Default
        value for conditional logic\n    }\n\n    command <<<\n        # Create multiple
        .txt files to test wildcard resolution\n        for i in {1..3}; do\n            echo
        \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        # Create
        an extra file conditionally\n        if [[ ~{create_extra_file} == \"true\"
        ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '1917'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '2433'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmok74.fhcrc.org:42995
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmok74.fhcrc.org:42995/api/workflows/v1/9c0634f3-1bf7-400b-ad5a-718516161c24/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"WildcardsandConditions","workflowProcessingEvents":[{"cromwellId":"cromid-502d9f2","description":"Finished","timestamp":"2025-07-06T04:00:53.545Z","cromwellVersion":"87"},{"cromwellId":"cromid-502d9f2","description":"PickedUp","timestamp":"2025-07-06T04:00:09.583Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow WildcardsandConditions {\n    input {\n        String prefix  #
        Required input for the file prefix (no default value)\n    }\n\n    call wildcard_and_conditions_test
        {\n        input:\n            prefix = prefix  # Explicitly pass the workflow
        input to the task\n    }\n\n    output {\n        Array[File] txt_files =
        wildcard_and_conditions_test.txt_files\n        String conditional_result
        = wildcard_and_conditions_test.conditional_output\n    }\n}\n\ntask wildcard_and_conditions_test
        {\n    input {\n        String prefix  # Required input for file creation\n        Boolean
        create_extra_file = true  # Default value for conditional logic\n    }\n\n    command
        <<<\n        # Create multiple .txt files to test wildcard resolution\n        for
        i in {1..3}; do\n            echo \"File content $i\" > \"~{prefix}_$i.txt\"\n        done\n\n        #
        Create an extra file conditionally\n        if [[ ~{create_extra_file} ==
        \"true\" ]]; then\n            echo \"Extra file content\" > ~{prefix}_extra.txt\n        fi\n\n        #
        Parse inputs directly in the command\n        echo \"Parsed prefix: ~{prefix}\"
        > parsed_output.txt\n    >>>\n\n    output {\n        Array[File] txt_files
        = glob(\"*.txt\")  # Test wildcard resolution\n        String conditional_output
        = read_string(\"parsed_output.txt\")  # Verify input parsing\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"read_from_cache\":
        false,\n  \"workflow_failure_mode\": \"ContinueWhilePossible\",\n  \"write_to_cache\":
        false\n}","inputs":"{\"WildcardsandConditions.prefix\":\"testfile\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"WildcardsandConditions.conditional_result":"Parsed
        prefix: testfile","WildcardsandConditions.txt_files":["/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/parsed_output.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_1.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_2.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_3.txt","/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24/call-wildcard_and_conditions_test/execution/glob-ef5df339533c1334f081dc8cc75ee4f3/testfile_extra.txt"]},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/WildcardsandConditions/9c0634f3-1bf7-400b-ad5a-718516161c24","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-07-06T04:00:53.545Z","start":"2025-07-06T04:00:09.583Z","id":"9c0634f3-1bf7-400b-ad5a-718516161c24","inputs":{"prefix":"testfile","WildcardsandConditions.wildcard_and_conditions_test.create_extra_file":true},"labels":{"cromwell-workflow-id":"cromwell-9c0634f3-1bf7-400b-ad5a-718516161c24"},"submission":"2025-07-06T03:36:48.295Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 06 Jul 2025 04:00:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3760'
    status:
      code: 200
      message: OK
version: 1
