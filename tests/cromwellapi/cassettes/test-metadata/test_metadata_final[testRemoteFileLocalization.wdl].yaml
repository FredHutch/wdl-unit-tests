interactions:
- request:
    body: "--d3ff4464bd4c19c6c9f4da5c0c714d15\r\nContent-Disposition: form-data; name=\"workflowSource\";
      filename=\"testRemoteFileLocalization.wdl\"\r\nContent-Type: application/octet-stream\r\n\r\nversion
      1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String string\n
      \       Int integer\n        Float float\n        Boolean boolean\n        File
      remote_file\n    }\n\n    # Task 1: Test input localization and processing\n
      \   call testInputLocalization {\n        input:\n            input_string =
      string,\n            input_integer = integer,\n            input_float = float,\n
      \           input_boolean = boolean,\n            input_file = remote_file\n
      \   }\n\n    # Task 2: Use output from Task 1 as input\n    call testOutputUsage
      {\n        input:\n            processed_file = testInputLocalization.processed_file\n
      \   }\n\n    # Workflow outputs: include all outputs from all tasks\n    output
      {\n        File localized_file = testInputLocalization.processed_file\n        File
      localized_string = testInputLocalization.outputStringfile\n        File localized_integer
      = testInputLocalization.outputIntegerfile\n        File localized_float = testInputLocalization.outputFloatfile\n
      \       File localized_boolean = testInputLocalization.outputBooleanfile\n        File
      renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
      {\n    input {\n        String input_string\n        Int input_integer\n        Float
      input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n
      \   command <<<\n        # Generate and verify input-based outputs\n        echo
      \"~{input_string}\" > localized_string.txt\n        echo \"~{input_integer}\"
      > localized_integer.txt\n        echo \"~{input_float}\" > localized_float.txt\n
      \       echo \"~{input_boolean}\" > localized_boolean.txt\n\n        # Input
      file is expected to already be localized by WDL\n        ls -lh \"~{input_file}\"\n
      \   >>>\n\n    output {\n        File outputStringfile = \"localized_string.txt\"\n
      \       File outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
      = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n
      \       File processed_file = input_file  # Pass input file directly as output\n
      \   }\n\n    runtime {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage
      {\n    input {\n        File processed_file\n    }\n\n    command <<<\n        #
      Rename the file received from the previous task\n        mv ~{processed_file}
      renamed_file.txt\n    >>>\n\n    output {\n        File renamed_file = \"renamed_file.txt\"\n
      \   }\n\n    runtime {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\r\n--d3ff4464bd4c19c6c9f4da5c0c714d15\r\nContent-Disposition:
      form-data; name=\"workflowInputs\"; filename=\"inputs.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"testRemoteFileLocalization.string\": \"Test String
      Input\",\n  \"testRemoteFileLocalization.integer\": 123,\n  \"testRemoteFileLocalization.float\":
      9.81,\n  \"testRemoteFileLocalization.boolean\": false,\n  \"testRemoteFileLocalization.remote_file\":
      \"/fh/fast/_DaSL/proof_testing/remote_file.txt\"\n}\n\r\n--d3ff4464bd4c19c6c9f4da5c0c714d15\r\nContent-Disposition:
      form-data; name=\"workflowOptions\"; filename=\"options.json\"\r\nContent-Type:
      application/json\r\n\r\n{\n  \"final_workflow_outputs_dir\": \"/fh/fast/_DaSL/proof_testing/remoteOutputstorage\",\n
      \ \"use_relative_output_paths\": true\n}\n\r\n--d3ff4464bd4c19c6c9f4da5c0c714d15--\r\n"
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3320'
      content-type:
      - multipart/form-data; boundary=d3ff4464bd4c19c6c9f4da5c0c714d15
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: POST
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1
  response:
    body:
      string: '{"id":"48bc69f5-6551-4672-81ed-7c72461f0db4","status":"Submitted"}'
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:05 GMT
      Server:
      - nginx/1.25.3
    status:
      code: 201
      message: Created
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:25:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:26:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:27:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:28:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:29:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:30:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:31:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:32:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:33:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:34:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:35:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:36:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:37:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:38:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:39:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:40:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:41:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:10 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:15 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:42:56 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:01 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:06 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:11 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:16 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:21 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:26 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:31 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:36 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:41 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:46 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:51 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:43:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:07 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:12 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:17 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:22 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:27 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:32 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:37 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:42 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:47 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:52 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:44:57 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:02 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:13 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:18 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:23 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:28 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:33 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:38 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:43 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:48 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:53 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:45:58 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:03 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:08 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:19 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:24 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:29 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:34 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:39 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:44 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:49 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:54 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:46:59 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:04 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:09 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:14 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:20 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:25 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:30 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:35 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"submittedFiles":{"workflow":"version 1.0\n\nworkflow testRemoteFileLocalization
        {\n    input {\n        String string\n        Int integer\n        Float
        float\n        Boolean boolean\n        File remote_file\n    }\n\n    # Task
        1: Test input localization and processing\n    call testInputLocalization
        {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"status":"Submitted","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:40 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3236'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:47:42.534Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:47:42.534Z","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:45 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:47:42.534Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:47:42.534Z","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:50 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:47:42.534Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:47:42.534Z","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:47:55 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:47:42.534Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4","actualWorkflowLanguage":"WDL","status":"Running","start":"2025-08-31T03:47:42.534Z","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:00 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '3796'
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - gizmoj8.fhcrc.org:44825
      user-agent:
      - python-httpx/0.28.1
    method: GET
    uri: https://gizmoj8.fhcrc.org:44825/api/workflows/v1/48bc69f5-6551-4672-81ed-7c72461f0db4/metadata?expandSubWorkflows=false&excludeKey=calls
  response:
    body:
      string: '{"workflowName":"testRemoteFileLocalization","workflowProcessingEvents":[{"cromwellId":"cromid-f88f429","description":"PickedUp","timestamp":"2025-08-31T03:47:42.534Z","cromwellVersion":"87"},{"cromwellId":"cromid-f88f429","description":"Finished","timestamp":"2025-08-31T03:47:59.941Z","cromwellVersion":"87"}],"actualWorkflowLanguageVersion":"1.0","submittedFiles":{"workflow":"version
        1.0\n\nworkflow testRemoteFileLocalization {\n    input {\n        String
        string\n        Int integer\n        Float float\n        Boolean boolean\n        File
        remote_file\n    }\n\n    # Task 1: Test input localization and processing\n    call
        testInputLocalization {\n        input:\n            input_string = string,\n            input_integer
        = integer,\n            input_float = float,\n            input_boolean =
        boolean,\n            input_file = remote_file\n    }\n\n    # Task 2: Use
        output from Task 1 as input\n    call testOutputUsage {\n        input:\n            processed_file
        = testInputLocalization.processed_file\n    }\n\n    # Workflow outputs: include
        all outputs from all tasks\n    output {\n        File localized_file = testInputLocalization.processed_file\n        File
        localized_string = testInputLocalization.outputStringfile\n        File localized_integer
        = testInputLocalization.outputIntegerfile\n        File localized_float =
        testInputLocalization.outputFloatfile\n        File localized_boolean = testInputLocalization.outputBooleanfile\n        File
        renamed_file = testOutputUsage.renamed_file\n    }\n}\n\ntask testInputLocalization
        {\n    input {\n        String input_string\n        Int input_integer\n        Float
        input_float\n        Boolean input_boolean\n        File input_file\n    }\n\n    command
        <<<\n        # Generate and verify input-based outputs\n        echo \"~{input_string}\"
        > localized_string.txt\n        echo \"~{input_integer}\" > localized_integer.txt\n        echo
        \"~{input_float}\" > localized_float.txt\n        echo \"~{input_boolean}\"
        > localized_boolean.txt\n\n        # Input file is expected to already be
        localized by WDL\n        ls -lh \"~{input_file}\"\n    >>>\n\n    output
        {\n        File outputStringfile = \"localized_string.txt\"\n        File
        outputIntegerfile = \"localized_integer.txt\"\n        File outputFloatfile
        = \"localized_float.txt\"\n        File outputBooleanfile = \"localized_boolean.txt\"\n        File
        processed_file = input_file  # Pass input file directly as output\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n\ntask testOutputUsage {\n    input
        {\n        File processed_file\n    }\n\n    command <<<\n        # Rename
        the file received from the previous task\n        mv ~{processed_file} renamed_file.txt\n    >>>\n\n    output
        {\n        File renamed_file = \"renamed_file.txt\"\n    }\n\n    runtime
        {\n        docker: \"ubuntu:20.04\"\n    }\n}\n","root":"","options":"{\n  \"final_workflow_outputs_dir\":
        \"/redacted/_DaSL/proof_testing/remoteOutputstorage\",\n  \"use_relative_output_paths\":
        true\n}","inputs":"{\"testRemoteFileLocalization.boolean\":false,\"testRemoteFileLocalization.float\":9.81,\"testRemoteFileLocalization.integer\":123,\"testRemoteFileLocalization.remote_file\":\"/redacted/_DaSL/proof_testing/remote_file.txt\",\"testRemoteFileLocalization.string\":\"Test
        String Input\"}","workflowUrl":"","labels":"{}"},"calls":{},"outputs":{"testRemoteFileLocalization.localized_boolean":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4/call-testInputLocalization/cacheCopy/execution/localized_boolean.txt","testRemoteFileLocalization.localized_integer":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4/call-testInputLocalization/cacheCopy/execution/localized_integer.txt","testRemoteFileLocalization.renamed_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4/call-testOutputUsage/cacheCopy/execution/renamed_file.txt","testRemoteFileLocalization.localized_file":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4/call-testInputLocalization/cacheCopy/redacted/_DaSL/proof_testing/remote_file.txt","testRemoteFileLocalization.localized_float":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4/call-testInputLocalization/cacheCopy/execution/localized_float.txt","testRemoteFileLocalization.localized_string":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4/call-testInputLocalization/cacheCopy/execution/localized_string.txt"},"workflowRoot":"/redacted/_DaSL/user/svc_proof_test/cromwell-scratch/testRemoteFileLocalization/48bc69f5-6551-4672-81ed-7c72461f0db4","actualWorkflowLanguage":"WDL","status":"Succeeded","end":"2025-08-31T03:47:59.941Z","start":"2025-08-31T03:47:42.534Z","id":"48bc69f5-6551-4672-81ed-7c72461f0db4","inputs":{"remote_file":"/redacted/_DaSL/proof_testing/remote_file.txt","float":9.81,"string":"Test
        String Input","boolean":false,"integer":123},"labels":{"cromwell-workflow-id":"cromwell-48bc69f5-6551-4672-81ed-7c72461f0db4"},"submission":"2025-08-31T03:25:05.311Z"}'
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Date:
      - Sun, 31 Aug 2025 03:48:05 GMT
      Server:
      - nginx/1.25.3
      Transfer-Encoding:
      - chunked
      content-length:
      - '5346'
    status:
      code: 200
      message: OK
version: 1
